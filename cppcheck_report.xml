<?xml version="1.0" encoding="UTF-8"?>
<results version="2">
    <cppcheck version="2.7"/>
    <errors>
        <error id="syntaxError" severity="error" msg="syntax error: keyword &apos;while&apos; is not allowed in global scope" verbose="syntax error: keyword &apos;while&apos; is not allowed in global scope" file0="debugger/test.cpp">
            <location file="debugger/test.cpp" line="64" column="13"/>
        </error>
        <error id="syntaxError" severity="error" msg="syntax error" verbose="syntax error" file0="test/accumulation.cpp">
            <location file="view/zip.hpp" line="178" column="27"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;base &lt; flag &gt;&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;base &lt; flag &gt;&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="test/draft/bit_field.cpp">
            <location file="test/draft/bit_field.cpp" line="26" column="15"/>
        </error>
        <error id="missingReturn" severity="error" msg="Found a exit path from function with non-void return type that has missing return statement" verbose="Found a exit path from function with non-void return type that has missing return statement" cwe="758" file0="test/wavelet_matrix.cpp">
            <location file="data_structure/wavelet_matrix.hpp" line="545" column="0"/>
        </error>
        <error id="missingReturn" severity="error" msg="Found a exit path from function with non-void return type that has missing return statement" verbose="Found a exit path from function with non-void return type that has missing return statement" cwe="758" file0="test/wavelet_matrix.cpp">
            <location file="data_structure/wavelet_matrix.hpp" line="340" column="0"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;extended_container&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;extended_container&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="test/wavelet_matrix.cpp">
            <location file="adapter/internal/container_extender.hpp" line="29" column="5"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;valarray&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;valarray&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="test/wavelet_matrix.cpp">
            <location file="adapter/valarray.hpp" line="56" column="5"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;valarray&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;valarray&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="test/wavelet_matrix.cpp">
            <location file="adapter/valarray.hpp" line="57" column="5"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;valarray&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;valarray&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="test/wavelet_matrix.cpp">
            <location file="adapter/valarray.hpp" line="58" column="5"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;valarray&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;valarray&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="test/wavelet_matrix.cpp">
            <location file="adapter/valarray.hpp" line="59" column="5"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;valarray&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;valarray&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="test/wavelet_matrix.cpp">
            <location file="adapter/valarray.hpp" line="60" column="5"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;compressed&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;compressed&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="test/wavelet_matrix.cpp">
            <location file="iterable/compressed.hpp" line="48" column="5"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;partial&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;partial&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="test/wavelet_matrix.cpp">
            <location file="internal/ranges.hpp" line="153" column="15"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;partial&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;partial&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="test/wavelet_matrix.cpp">
            <location file="internal/ranges.hpp" line="181" column="15"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;partial&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;partial&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="test/wavelet_matrix.cpp">
            <location file="internal/ranges.hpp" line="204" column="15"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;partial&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;partial&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="test/wavelet_matrix.cpp">
            <location file="internal/ranges.hpp" line="224" column="15"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;bit_vector&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;bit_vector&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="test/wavelet_matrix.cpp">
            <location file="data_structure/bit_vector.hpp" line="35" column="5"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;bit_vector&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;bit_vector&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="test/wavelet_matrix.cpp">
            <location file="data_structure/bit_vector.hpp" line="42" column="23"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;base&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;base&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="test/wavelet_matrix.cpp">
            <location file="data_structure/wavelet_matrix.hpp" line="67" column="5"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;base&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;base&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="test/wavelet_matrix.cpp">
            <location file="data_structure/wavelet_matrix.hpp" line="70" column="5"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;compressed_wavelet_matrix&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;compressed_wavelet_matrix&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="test/wavelet_matrix.cpp">
            <location file="data_structure/wavelet_matrix.hpp" line="525" column="5"/>
        </error>
        <error id="knownConditionTrueFalse" severity="style" msg="Condition &apos;lhs._block&lt;rhs._block&apos; is always true" verbose="Condition &apos;lhs._block&lt;rhs._block&apos; is always true" cwe="571" file0="test/wavelet_matrix.cpp">
            <location file="view/concat.hpp" line="367" column="23" info="Condition &apos;lhs._block&lt;rhs._block&apos; is always true"/>
            <location file="view/concat.hpp" line="366" column="23" info="Assuming condition is false"/>
            <location file="view/concat.hpp" line="363" column="23" info="Assuming that condition &apos;lhs._block==rhs._block&apos; is not redundant"/>
        </error>
        <error id="knownConditionTrueFalse" severity="style" msg="Condition &apos;bit==-1&apos; is always false" verbose="Condition &apos;bit==-1&apos; is always false" cwe="570" file0="test/wavelet_matrix.cpp">
            <location file="data_structure/wavelet_matrix.hpp" line="204" column="16" info="Condition &apos;bit==-1&apos; is always false"/>
        </error>
        <error id="unsignedPositive" severity="style" msg="Unsigned expression &apos;p&apos; can&apos;t be negative so it is unnecessary to test it." verbose="Unsigned expression &apos;p&apos; can&apos;t be negative so it is unnecessary to test it." cwe="570" file0="test/wavelet_matrix.cpp">
            <location file="adapter/valarray.hpp" line="33" column="18" info="Unsigned positive"/>
        </error>
        <error id="unsignedPositive" severity="style" msg="Unsigned expression &apos;p&apos; can&apos;t be negative so it is unnecessary to test it." verbose="Unsigned expression &apos;p&apos; can&apos;t be negative so it is unnecessary to test it." cwe="570" file0="test/wavelet_matrix.cpp">
            <location file="adapter/valarray.hpp" line="36" column="18" info="Unsigned positive"/>
        </error>
        <error id="unsignedPositive" severity="style" msg="Unsigned expression &apos;l&apos; can&apos;t be negative so it is unnecessary to test it." verbose="Unsigned expression &apos;l&apos; can&apos;t be negative so it is unnecessary to test it." cwe="570" file0="test/wavelet_matrix.cpp">
            <location file="adapter/valarray.hpp" line="39" column="18" info="Unsigned positive"/>
        </error>
        <error id="unsignedLessThanZero" severity="style" msg="Checking if unsigned expression &apos;p&apos; is less than zero." verbose="The unsigned expression &apos;p&apos; will never be negative so it is either pointless or an error to check if it is." cwe="570" file0="test/wavelet_matrix.cpp">
            <location file="adapter/valarray.hpp" line="43" column="18" info="Unsigned less than zero"/>
        </error>
        <error id="unsignedPositive" severity="style" msg="Unsigned expression &apos;--h&apos; can&apos;t be negative so it is unnecessary to test it." verbose="Unsigned expression &apos;--h&apos; can&apos;t be negative so it is unnecessary to test it." cwe="570" file0="test/wavelet_matrix.cpp">
            <location file="data_structure/wavelet_matrix.hpp" line="99" column="9" info="Unsigned positive"/>
        </error>
        <error id="unsignedPositive" severity="style" msg="Unsigned expression &apos;--i&apos; can&apos;t be negative so it is unnecessary to test it." verbose="Unsigned expression &apos;--i&apos; can&apos;t be negative so it is unnecessary to test it." cwe="570" file0="test/wavelet_matrix.cpp">
            <location file="data_structure/wavelet_matrix.hpp" line="118" column="9" info="Unsigned positive"/>
        </error>
        <error id="unsignedPositive" severity="style" msg="Unsigned expression &apos;h&apos; can&apos;t be negative so it is unnecessary to test it." verbose="Unsigned expression &apos;h&apos; can&apos;t be negative so it is unnecessary to test it." cwe="570" file0="test/wavelet_matrix.cpp">
            <location file="data_structure/wavelet_matrix.hpp" line="144" column="46" info="Unsigned positive"/>
        </error>
        <error id="unsignedPositive" severity="style" msg="Unsigned expression &apos;--h&apos; can&apos;t be negative so it is unnecessary to test it." verbose="Unsigned expression &apos;--h&apos; can&apos;t be negative so it is unnecessary to test it." cwe="570" file0="test/wavelet_matrix.cpp">
            <location file="data_structure/wavelet_matrix.hpp" line="168" column="9" info="Unsigned positive"/>
        </error>
        <error id="unsignedPositive" severity="style" msg="Unsigned expression &apos;--h&apos; can&apos;t be negative so it is unnecessary to test it." verbose="Unsigned expression &apos;--h&apos; can&apos;t be negative so it is unnecessary to test it." cwe="570" file0="test/wavelet_matrix.cpp">
            <location file="data_structure/wavelet_matrix.hpp" line="245" column="9" info="Unsigned positive"/>
        </error>
        <error id="unsignedLessThanZero" severity="style" msg="Checking if unsigned expression &apos;rank&apos; is less than zero." verbose="The unsigned expression &apos;rank&apos; will never be negative so it is either pointless or an error to check if it is." cwe="570" file0="test/wavelet_matrix.cpp">
            <location file="data_structure/wavelet_matrix.hpp" line="278" column="17" info="Unsigned less than zero"/>
        </error>
        <error id="unsignedLessThanZero" severity="style" msg="Checking if unsigned expression &apos;rank&apos; is less than zero." verbose="The unsigned expression &apos;rank&apos; will never be negative so it is either pointless or an error to check if it is." cwe="570" file0="test/wavelet_matrix.cpp">
            <location file="data_structure/wavelet_matrix.hpp" line="284" column="17" info="Unsigned less than zero"/>
        </error>
        <error id="unsignedPositive" severity="style" msg="Unsigned expression &apos;p&apos; can&apos;t be negative so it is unnecessary to test it." verbose="Unsigned expression &apos;p&apos; can&apos;t be negative so it is unnecessary to test it." cwe="570" file0="test/wavelet_matrix.cpp">
            <location file="data_structure/wavelet_matrix.hpp" line="323" column="50" info="Unsigned positive"/>
        </error>
        <error id="unsignedPositive" severity="style" msg="Unsigned expression &apos;k&apos; can&apos;t be negative so it is unnecessary to test it." verbose="Unsigned expression &apos;k&apos; can&apos;t be negative so it is unnecessary to test it." cwe="570" file0="test/wavelet_matrix.cpp">
            <location file="data_structure/wavelet_matrix.hpp" line="358" column="22" info="Unsigned positive"/>
        </error>
        <error id="unsignedPositive" severity="style" msg="Unsigned expression &apos;k&apos; can&apos;t be negative so it is unnecessary to test it." verbose="Unsigned expression &apos;k&apos; can&apos;t be negative so it is unnecessary to test it." cwe="570" file0="test/wavelet_matrix.cpp">
            <location file="data_structure/wavelet_matrix.hpp" line="366" column="22" info="Unsigned positive"/>
        </error>
        <error id="unsignedPositive" severity="style" msg="Unsigned expression &apos;k&apos; can&apos;t be negative so it is unnecessary to test it." verbose="Unsigned expression &apos;k&apos; can&apos;t be negative so it is unnecessary to test it." cwe="570" file0="test/wavelet_matrix.cpp">
            <location file="data_structure/wavelet_matrix.hpp" line="371" column="22" info="Unsigned positive"/>
        </error>
        <error id="unsignedPositive" severity="style" msg="Unsigned expression &apos;k&apos; can&apos;t be negative so it is unnecessary to test it." verbose="Unsigned expression &apos;k&apos; can&apos;t be negative so it is unnecessary to test it." cwe="570" file0="test/wavelet_matrix.cpp">
            <location file="data_structure/wavelet_matrix.hpp" line="376" column="22" info="Unsigned positive"/>
        </error>
        <error id="unsignedPositive" severity="style" msg="Unsigned expression &apos;k&apos; can&apos;t be negative so it is unnecessary to test it." verbose="Unsigned expression &apos;k&apos; can&apos;t be negative so it is unnecessary to test it." cwe="570" file0="test/wavelet_matrix.cpp">
            <location file="data_structure/wavelet_matrix.hpp" line="381" column="22" info="Unsigned positive"/>
        </error>
        <error id="shadowFunction" severity="style" msg="Local variable &apos;pow&apos; shadows outer function" verbose="Local variable &apos;pow&apos; shadows outer function" cwe="398" file0="test/wavelet_matrix.cpp">
            <location file="numeric/arithmetic.hpp" line="258" column="10" info="Shadow variable"/>
            <location file="numeric/arithmetic.hpp" line="102" column="13" info="Shadowed declaration"/>
        </error>
        <error id="shadowFunction" severity="style" msg="Local variable &apos;gcd&apos; shadows outer function" verbose="Local variable &apos;gcd&apos; shadows outer function" cwe="398" file0="test/wavelet_matrix.cpp">
            <location file="numeric/arithmetic.hpp" line="322" column="13" info="Shadow variable"/>
            <location file="iterable/operation.hpp" line="123" column="23" info="Shadowed declaration"/>
        </error>
        <error id="shadowFunction" severity="style" msg="Local variable &apos;bit&apos; shadows outer function" verbose="Local variable &apos;bit&apos; shadows outer function" cwe="398" file0="test/wavelet_matrix.cpp">
            <location file="data_structure/wavelet_matrix.hpp" line="87" column="33" info="Shadow variable"/>
            <location file="numeric/bit.hpp" line="102" column="20" info="Shadowed declaration"/>
        </error>
        <error id="shadowFunction" severity="style" msg="Local variable &apos;bit&apos; shadows outer function" verbose="Local variable &apos;bit&apos; shadows outer function" cwe="398" file0="test/wavelet_matrix.cpp">
            <location file="data_structure/wavelet_matrix.hpp" line="132" column="24" info="Shadow variable"/>
            <location file="numeric/bit.hpp" line="102" column="20" info="Shadowed declaration"/>
        </error>
        <error id="shadowFunction" severity="style" msg="Local variable &apos;bit&apos; shadows outer function" verbose="Local variable &apos;bit&apos; shadows outer function" cwe="398" file0="test/wavelet_matrix.cpp">
            <location file="data_structure/wavelet_matrix.hpp" line="169" column="24" info="Shadow variable"/>
            <location file="numeric/bit.hpp" line="102" column="20" info="Shadowed declaration"/>
        </error>
        <error id="unusedVariable" severity="style" msg="Unused variable: vals" verbose="Unused variable: vals" cwe="563" file0="test/wavelet_matrix.cpp">
            <location file="data_structure/wavelet_matrix.hpp" line="100" column="36"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;valarray&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;valarray&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="test/wavelet_matrix.cpp">
            <location file="adapter/valarray.hpp" line="63" column="25"/>
        </error>
        <error id="syntaxError" severity="error" msg="syntax error" verbose="syntax error" file0="verify/0b46d7fee45c5da2e0bc6fdc457ed59b/0001.test.cpp">
            <location file="data_structure/lazy_segment_tree.hpp" line="215" column="1"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;builtin_reduction&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;builtin_reduction&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="verify/0b857a03aee935cbb50464a2ba0346a5/0001.test.cpp">
            <location file="numeric/modular/builtin_reduction.hpp" line="36" column="15"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;montgomery_reduction&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;montgomery_reduction&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="verify/0b857a03aee935cbb50464a2ba0346a5/0001.test.cpp">
            <location file="numeric/modular/montgomery_reduction.hpp" line="52" column="15"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;arbitrary_montgomery_reduction&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;arbitrary_montgomery_reduction&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="verify/0b857a03aee935cbb50464a2ba0346a5/0001.test.cpp">
            <location file="numeric/modular/montgomery_reduction.hpp" line="183" column="15"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;prime_enumerator&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;prime_enumerator&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="verify/0b857a03aee935cbb50464a2ba0346a5/0001.test.cpp">
            <location file="numeric/prime_enumerator.hpp" line="156" column="5"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;extended_container &lt; std :: vector &lt; static_modint_32bit &lt; 998244353 &gt; ... &gt; &gt;&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;extended_container &lt; std :: vector &lt; static_modint_32bit &lt; 998244353 &gt; ... &gt; &gt;&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="verify/0b857a03aee935cbb50464a2ba0346a5/0001.test.cpp">
            <location file="adapter/internal/container_extender.hpp" line="29" column="5"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;modint &lt; static_modular_context &lt; builtin_reduction_32bit , 998244353 &gt; &gt;&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;modint &lt; static_modular_context &lt; builtin_reduction_32bit , 998244353 &gt; &gt;&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="verify/0b857a03aee935cbb50464a2ba0346a5/0001.test.cpp">
            <location file="numeric/modular/modint.hpp" line="108" column="15"/>
        </error>
        <error id="knownConditionTrueFalse" severity="style" msg="Condition &apos;r&lt;=29&apos; is always true" verbose="Condition &apos;r&lt;=29&apos; is always true" cwe="571" file0="verify/0b857a03aee935cbb50464a2ba0346a5/0001.test.cpp">
            <location file="numeric/prime_enumerator.hpp" line="90" column="19" info="Condition &apos;r&lt;=29&apos; is always true"/>
            <location file="numeric/prime_enumerator.hpp" line="82" column="26" info="Assignment &apos;r=n%30&apos;, assigned value is less than 30"/>
        </error>
        <error id="unsignedLessThanZero" severity="style" msg="Checking if unsigned expression &apos;this-&gt;_block&apos; is less than zero." verbose="The unsigned expression &apos;this-&gt;_block&apos; will never be negative so it is either pointless or an error to check if it is." cwe="570" file0="verify/0b857a03aee935cbb50464a2ba0346a5/0001.test.cpp">
            <location file="numeric/prime_enumerator.hpp" line="246" column="29" info="Unsigned less than zero"/>
        </error>
        <error id="unsignedLessThanZero" severity="style" msg="Checking if unsigned expression &apos;this-&gt;_block&apos; is less than zero." verbose="The unsigned expression &apos;this-&gt;_block&apos; will never be negative so it is either pointless or an error to check if it is." cwe="570" file0="verify/0b857a03aee935cbb50464a2ba0346a5/0001.test.cpp">
            <location file="numeric/prime_enumerator.hpp" line="278" column="29" info="Unsigned less than zero"/>
        </error>
        <error id="unsignedLessThanZero" severity="style" msg="Checking if unsigned expression &apos;this-&gt;_block&apos; is less than zero." verbose="The unsigned expression &apos;this-&gt;_block&apos; will never be negative so it is either pointless or an error to check if it is." cwe="570" file0="verify/0b857a03aee935cbb50464a2ba0346a5/0001.test.cpp">
            <location file="numeric/prime_enumerator.hpp" line="299" column="29" info="Unsigned less than zero"/>
        </error>
        <error id="unsignedLessThanZero" severity="style" msg="Checking if unsigned expression &apos;this-&gt;_block&apos; is less than zero." verbose="The unsigned expression &apos;this-&gt;_block&apos; will never be negative so it is either pointless or an error to check if it is." cwe="570" file0="verify/0b857a03aee935cbb50464a2ba0346a5/0001.test.cpp">
            <location file="numeric/prime_enumerator.hpp" line="314" column="33" info="Unsigned less than zero"/>
        </error>
        <error id="shadowFunction" severity="style" msg="Local variable &apos;mod&apos; shadows outer function" verbose="Local variable &apos;mod&apos; shadows outer function" cwe="398" file0="verify/0b857a03aee935cbb50464a2ba0346a5/0001.test.cpp">
            <location file="numeric/modular/builtin_reduction.hpp" line="77" column="27" info="Shadow variable"/>
            <location file="numeric/modular/builtin_reduction.hpp" line="32" column="33" info="Shadowed declaration"/>
        </error>
        <error id="shadowFunction" severity="style" msg="Local variable &apos;mod&apos; shadows outer function" verbose="Local variable &apos;mod&apos; shadows outer function" cwe="398" file0="verify/0b857a03aee935cbb50464a2ba0346a5/0001.test.cpp">
            <location file="numeric/modular/barrett_reduction.hpp" line="105" column="27" info="Shadow variable"/>
            <location file="numeric/modular/barrett_reduction.hpp" line="41" column="33" info="Shadowed declaration"/>
        </error>
        <error id="shadowFunction" severity="style" msg="Local variable &apos;size&apos; shadows outer function" verbose="Local variable &apos;size&apos; shadows outer function" cwe="398" file0="verify/0b857a03aee935cbb50464a2ba0346a5/0001.test.cpp">
            <location file="numeric/prime_enumerator.hpp" line="166" column="19" info="Shadow variable"/>
            <location file="numeric/prime_enumerator.hpp" line="182" column="22" info="Shadowed declaration"/>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;i&apos; should be passed by const reference." verbose="Parameter &apos;i&apos; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="verify/0b857a03aee935cbb50464a2ba0346a5/0001.test.cpp">
            <location file="adapter/internal/container_extender.hpp" line="41" column="39"/>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;j&apos; should be passed by const reference." verbose="Parameter &apos;j&apos; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="verify/0b857a03aee935cbb50464a2ba0346a5/0001.test.cpp">
            <location file="adapter/internal/container_extender.hpp" line="41" column="58"/>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;k&apos; should be passed by const reference." verbose="Parameter &apos;k&apos; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="verify/0b857a03aee935cbb50464a2ba0346a5/0001.test.cpp">
            <location file="adapter/internal/container_extender.hpp" line="82" column="41"/>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;k&apos; should be passed by const reference." verbose="Parameter &apos;k&apos; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="verify/0b857a03aee935cbb50464a2ba0346a5/0001.test.cpp">
            <location file="adapter/internal/container_extender.hpp" line="86" column="41"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" file0="verify/0b857a03aee935cbb50464a2ba0346a5/0001.test.cpp">
            <location file="numeric/prime_enumerator.hpp" line="197" column="38"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" file0="verify/0b857a03aee935cbb50464a2ba0346a5/0001.test.cpp">
            <location file="numeric/prime_enumerator.hpp" line="289" column="23"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;container&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;container&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="verify/0ce5427af76981b75bf37ba32c23b4d7/0001.test.cpp">
            <location file="structure/grid.hpp" line="99" column="5"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;unfolded_container&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;unfolded_container&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="verify/0ce5427af76981b75bf37ba32c23b4d7/0001.test.cpp">
            <location file="structure/grid.hpp" line="154" column="5"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;modint &lt; dynamic_barrett_modular_context_32bit &lt; -1 &gt; &gt;&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;modint &lt; dynamic_barrett_modular_context_32bit &lt; -1 &gt; &gt;&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="verify/0ce5427af76981b75bf37ba32c23b4d7/0001.test.cpp">
            <location file="numeric/modular/modint.hpp" line="108" column="15"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;resize&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;resize&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="verify/0ce5427af76981b75bf37ba32c23b4d7/0001.test.cpp">
            <location file="structure/grid.hpp" line="119" column="17" info="Function in derived class"/>
            <location file="structure/grid.hpp" line="70" column="18" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;resize&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;resize&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="verify/0ce5427af76981b75bf37ba32c23b4d7/0001.test.cpp">
            <location file="structure/grid.hpp" line="176" column="17" info="Function in derived class"/>
            <location file="structure/grid.hpp" line="70" column="18" info="Virtual function in base class"/>
        </error>
        <error id="unsignedPositive" severity="style" msg="Unsigned expression &apos;i&apos; can&apos;t be negative so it is unnecessary to test it." verbose="Unsigned expression &apos;i&apos; can&apos;t be negative so it is unnecessary to test it." cwe="570" file0="verify/0ce5427af76981b75bf37ba32c23b4d7/0001.test.cpp">
            <location file="structure/grid.hpp" line="55" column="18" info="Unsigned positive"/>
        </error>
        <error id="unsignedPositive" severity="style" msg="Unsigned expression &apos;j&apos; can&apos;t be negative so it is unnecessary to test it." verbose="Unsigned expression &apos;j&apos; can&apos;t be negative so it is unnecessary to test it." cwe="570" file0="verify/0ce5427af76981b75bf37ba32c23b4d7/0001.test.cpp">
            <location file="structure/grid.hpp" line="56" column="18" info="Unsigned positive"/>
        </error>
        <error id="unsignedLessThanZero" severity="style" msg="Checking if unsigned expression &apos;x&apos; is less than zero." verbose="The unsigned expression &apos;x&apos; will never be negative so it is either pointless or an error to check if it is." cwe="570" file0="verify/0ce5427af76981b75bf37ba32c23b4d7/0001.test.cpp">
            <location file="structure/grid.hpp" line="60" column="18" info="Unsigned less than zero"/>
        </error>
        <error id="unsignedLessThanZero" severity="style" msg="Checking if unsigned expression &apos;x&apos; is less than zero." verbose="The unsigned expression &apos;x&apos; will never be negative so it is either pointless or an error to check if it is." cwe="570" file0="verify/0ce5427af76981b75bf37ba32c23b4d7/0001.test.cpp">
            <location file="structure/grid.hpp" line="63" column="18" info="Unsigned less than zero"/>
        </error>
        <error id="unsignedPositive" severity="style" msg="Unsigned expression &apos;i&apos; can&apos;t be negative so it is unnecessary to test it." verbose="Unsigned expression &apos;i&apos; can&apos;t be negative so it is unnecessary to test it." cwe="570" file0="verify/0ce5427af76981b75bf37ba32c23b4d7/0001.test.cpp">
            <location file="structure/grid.hpp" line="207" column="18" info="Unsigned positive"/>
        </error>
        <error id="unsignedPositive" severity="style" msg="Unsigned expression &apos;j&apos; can&apos;t be negative so it is unnecessary to test it." verbose="Unsigned expression &apos;j&apos; can&apos;t be negative so it is unnecessary to test it." cwe="570" file0="verify/0ce5427af76981b75bf37ba32c23b4d7/0001.test.cpp">
            <location file="structure/grid.hpp" line="207" column="52" info="Unsigned positive"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;debug_t&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;debug_t&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="verify/0b857a03aee935cbb50464a2ba0346a5/0001.test.cpp">
            <location file="debugger/debug.hpp" line="82" column="5"/>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;args&apos; should be passed by const reference." verbose="Parameter &apos;args&apos; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="verify/0b857a03aee935cbb50464a2ba0346a5/0001.test.cpp">
            <location file="debugger/debug.hpp" line="348" column="55"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;modint &lt; dynamic_arbitrary_montgomery_modular_context_32bit &lt; -1 &gt; &gt;&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;modint &lt; dynamic_arbitrary_montgomery_modular_context_32bit &lt; -1 &gt; &gt;&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="verify/0ce5427af76981b75bf37ba32c23b4d7/0002.test.cpp">
            <location file="numeric/modular/modint.hpp" line="108" column="15"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;modint&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;modint&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="verify/1c399d461e734a165708340b14e0aebc/0001.test.cpp">
            <location file="numeric/modular/modint.hpp" line="108" column="15"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;binomial_coefficient &lt; std :: int64_t , std :: int64_t &gt;&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;binomial_coefficient &lt; std :: int64_t , std :: int64_t &gt;&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="verify/1c399d461e734a165708340b14e0aebc/0001.test.cpp">
            <location file="numeric/binomial_coefficient.hpp" line="241" column="5"/>
        </error>
        <error id="missingReturn" severity="error" msg="Found a exit path from function with non-void return type that has missing return statement" verbose="Found a exit path from function with non-void return type that has missing return statement" cwe="758" file0="verify/1cffc81518ff931b9b90d02c10a3d598/0001.test.cpp">
            <location file="internal/range_reference.hpp" line="49" column="0"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;compressed&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;compressed&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="verify/1cffc81518ff931b9b90d02c10a3d598/0001.test.cpp">
            <location file="iterable/compressed.hpp" line="32" column="5"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;valarray &lt; unsigned int &gt;&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;valarray &lt; unsigned int &gt;&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="verify/1cffc81518ff931b9b90d02c10a3d598/0001.test.cpp">
            <location file="adapter/valarray.hpp" line="52" column="5"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;valarray &lt; unsigned int &gt;&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;valarray &lt; unsigned int &gt;&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="verify/1cffc81518ff931b9b90d02c10a3d598/0001.test.cpp">
            <location file="adapter/valarray.hpp" line="56" column="5"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;valarray &lt; unsigned int &gt;&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;valarray &lt; unsigned int &gt;&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="verify/1cffc81518ff931b9b90d02c10a3d598/0001.test.cpp">
            <location file="adapter/valarray.hpp" line="57" column="5"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;valarray &lt; unsigned int &gt;&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;valarray &lt; unsigned int &gt;&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="verify/1cffc81518ff931b9b90d02c10a3d598/0001.test.cpp">
            <location file="adapter/valarray.hpp" line="58" column="5"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;valarray &lt; unsigned int &gt;&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;valarray &lt; unsigned int &gt;&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="verify/1cffc81518ff931b9b90d02c10a3d598/0001.test.cpp">
            <location file="adapter/valarray.hpp" line="59" column="5"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;valarray &lt; unsigned int &gt;&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;valarray &lt; unsigned int &gt;&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="verify/1cffc81518ff931b9b90d02c10a3d598/0001.test.cpp">
            <location file="adapter/valarray.hpp" line="60" column="5"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;extended_container &lt; lib :: std :: valarray &lt; unsigned int &gt; &gt;&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;extended_container &lt; lib :: std :: valarray &lt; unsigned int &gt; &gt;&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="verify/1cffc81518ff931b9b90d02c10a3d598/0001.test.cpp">
            <location file="adapter/internal/container_extender.hpp" line="29" column="5"/>
        </error>
        <error id="unsignedLessThanZero" severity="style" msg="Checking if unsigned expression &apos;p&apos; is less than zero." verbose="The unsigned expression &apos;p&apos; will never be negative so it is either pointless or an error to check if it is." cwe="570" file0="verify/1cffc81518ff931b9b90d02c10a3d598/0001.test.cpp">
            <location file="data_structure/wavelet_matrix.hpp" line="314" column="18" info="Unsigned less than zero"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;compressed_wavelet_matrix &lt; unsigned int , std :: unordered_map &gt;&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;compressed_wavelet_matrix &lt; unsigned int , std :: unordered_map &gt;&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="verify/1cffc81518ff931b9b90d02c10a3d598/0002.test.cpp">
            <location file="data_structure/wavelet_matrix.hpp" line="525" column="5"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;compressed &lt; unsigned int , valarray &lt; u32 &gt; &gt;&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;compressed &lt; unsigned int , valarray &lt; u32 &gt; &gt;&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="verify/1cffc81518ff931b9b90d02c10a3d598/0002.test.cpp">
            <location file="iterable/compressed.hpp" line="32" column="5"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;compressed &lt; unsigned int , valarray &lt; u32 &gt; &gt;&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;compressed &lt; unsigned int , valarray &lt; u32 &gt; &gt;&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="verify/1cffc81518ff931b9b90d02c10a3d598/0002.test.cpp">
            <location file="iterable/compressed.hpp" line="48" column="5"/>
        </error>
        <error id="unsignedPositive" severity="style" msg="Unsigned expression &apos;l&apos; can&apos;t be negative so it is unnecessary to test it." verbose="Unsigned expression &apos;l&apos; can&apos;t be negative so it is unnecessary to test it." cwe="570" file0="verify/1cffc81518ff931b9b90d02c10a3d598/0002.test.cpp">
            <location file="internal/range_reference.hpp" line="38" column="18" info="Unsigned positive"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;xorshift64&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;xorshift64&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="verify/1e649bdc2b26fb285a5a10099ca1e49a/0001.test.cpp">
            <location file="random/xorshift.hpp" line="57" column="15"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;prime_flags&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;prime_flags&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="verify/1e649bdc2b26fb285a5a10099ca1e49a/0001.test.cpp">
            <location file="numeric/prime_sieve.hpp" line="17" column="5"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;prime_sieve&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;prime_sieve&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="verify/1e649bdc2b26fb285a5a10099ca1e49a/0001.test.cpp">
            <location file="numeric/prime_sieve.hpp" line="31" column="5"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;xorshift &lt; -1 &gt;&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;xorshift &lt; -1 &gt;&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="verify/1e649bdc2b26fb285a5a10099ca1e49a/0001.test.cpp">
            <location file="random/xorshift.hpp" line="26" column="15"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;valarray &lt; unsigned int &gt;&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;valarray &lt; unsigned int &gt;&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="verify/1cffc81518ff931b9b90d02c10a3d598/0001.test.cpp">
            <location file="adapter/valarray.hpp" line="63" column="25"/>
        </error>
        <error id="syntaxError" severity="error" msg="syntax error" verbose="syntax error" file0="verify/2d39ad719e65c5605d89d6000b8f4215/0001.test.cpp">
            <location file="data_structure/implicit_treap.hpp" line="253" column="1"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;quotient_enumerator&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;quotient_enumerator&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="verify/3139c716ef3ef74f6f69d468e0a873f5/0001.test.cpp">
            <location file="numeric/quotient_enumerator.hpp" line="33" column="5"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;xorshift&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;xorshift&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="verify/3267334cd2a7234501fb87d6b6e32964/0001.test.cpp">
            <location file="random/xorshift.hpp" line="26" column="15"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;extended_container &lt; std :: vector &lt; std :: uint64_t ... &gt; &gt;&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;extended_container &lt; std :: vector &lt; std :: uint64_t ... &gt; &gt;&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="verify/3267334cd2a7234501fb87d6b6e32964/0001.test.cpp">
            <location file="adapter/internal/container_extender.hpp" line="29" column="5"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;extended_container &lt; std :: vector &lt; static_modint_32bit &lt; 1000000007 &gt; ... &gt; &gt;&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;extended_container &lt; std :: vector &lt; static_modint_32bit &lt; 1000000007 &gt; ... &gt; &gt;&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="verify/3267334cd2a7234501fb87d6b6e32964/0001.test.cpp">
            <location file="adapter/internal/container_extender.hpp" line="29" column="5"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;modint &lt; static_modular_context &lt; builtin_reduction_32bit , 1000000007 &gt; &gt;&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;modint &lt; static_modular_context &lt; builtin_reduction_32bit , 1000000007 &gt; &gt;&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="verify/3267334cd2a7234501fb87d6b6e32964/0001.test.cpp">
            <location file="numeric/modular/modint.hpp" line="108" column="15"/>
        </error>
        <error id="shadowVariable" severity="style" msg="Local variable &apos;rand&apos; shadows outer variable" verbose="Local variable &apos;rand&apos; shadows outer variable" cwe="398" file0="verify/3267334cd2a7234501fb87d6b6e32964/0001.test.cpp">
            <location file="numeric/internal/factorize.hpp" line="47" column="40" info="Shadow variable"/>
            <location file="random/xorshift.hpp" line="69" column="10" info="Shadowed declaration"/>
        </error>
        <error id="shadowVariable" severity="style" msg="Local variable &apos;rand&apos; shadows outer variable" verbose="Local variable &apos;rand&apos; shadows outer variable" cwe="398" file0="verify/3267334cd2a7234501fb87d6b6e32964/0001.test.cpp">
            <location file="numeric/internal/primitive_root.hpp" line="41" column="40" info="Shadow variable"/>
            <location file="random/xorshift.hpp" line="69" column="10" info="Shadowed declaration"/>
        </error>
        <error id="shadowFunction" severity="style" msg="Local variable &apos;pow&apos; shadows outer function" verbose="Local variable &apos;pow&apos; shadows outer function" cwe="398" file0="verify/3267334cd2a7234501fb87d6b6e32964/0001.test.cpp">
            <location file="numeric/internal/primitive_root.hpp" line="36" column="5" info="Shadow variable"/>
            <location file="numeric/arithmetic.hpp" line="102" column="13" info="Shadowed declaration"/>
        </error>
        <error id="shadowFunction" severity="style" msg="Local variable &apos;pow&apos; shadows outer function" verbose="Local variable &apos;pow&apos; shadows outer function" cwe="398" file0="verify/3267334cd2a7234501fb87d6b6e32964/0001.test.cpp">
            <location file="numeric/internal/primitive_root.hpp" line="47" column="9" info="Shadow variable"/>
            <location file="numeric/arithmetic.hpp" line="102" column="13" info="Shadowed declaration"/>
        </error>
        <error id="useStlAlgorithm" severity="style" msg="Consider using std::transform algorithm instead of a raw loop." verbose="Consider using std::transform algorithm instead of a raw loop." cwe="398" file0="verify/3267334cd2a7234501fb87d6b6e32964/0001.test.cpp">
            <location file="numeric/internal/primitive_root.hpp" line="36" column="25"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;modint &lt; dynamic_modular_context &lt; montgomery_reduction_32bit , INTERNAL_MODINT_ID &gt; &gt;&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;modint &lt; dynamic_modular_context &lt; montgomery_reduction_32bit , INTERNAL_MODINT_ID &gt; &gt;&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="verify/379736d8a0a2ebc47bab9122352c3777/0001.test.cpp">
            <location file="numeric/modular/modint.hpp" line="108" column="15"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;modint &lt; dynamic_modular_context &lt; montgomery_reduction_64bit , INTERNAL_MODINT_ID &gt; &gt;&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;modint &lt; dynamic_modular_context &lt; montgomery_reduction_64bit , INTERNAL_MODINT_ID &gt; &gt;&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="verify/379736d8a0a2ebc47bab9122352c3777/0001.test.cpp">
            <location file="numeric/modular/modint.hpp" line="108" column="15"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;modint &lt; dynamic_montgomery_modular_context_32bit &lt; INTERNAL_MODINT_ID &gt; &gt;&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;modint &lt; dynamic_montgomery_modular_context_32bit &lt; INTERNAL_MODINT_ID &gt; &gt;&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="verify/379736d8a0a2ebc47bab9122352c3777/0001.test.cpp">
            <location file="numeric/modular/modint.hpp" line="108" column="15"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;modint &lt; dynamic_montgomery_modular_context_64bit &lt; INTERNAL_MODINT_ID &gt; &gt;&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;modint &lt; dynamic_montgomery_modular_context_64bit &lt; INTERNAL_MODINT_ID &gt; &gt;&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="verify/379736d8a0a2ebc47bab9122352c3777/0001.test.cpp">
            <location file="numeric/modular/modint.hpp" line="108" column="15"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;extended_container &lt; std :: vector &lt; i64 ... &gt; &gt;&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;extended_container &lt; std :: vector &lt; i64 ... &gt; &gt;&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="verify/379736d8a0a2ebc47bab9122352c3777/0001.test.cpp">
            <location file="adapter/internal/container_extender.hpp" line="29" column="5"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;extended_container &lt; std :: vector &lt; std :: int64_t ... &gt; &gt;&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;extended_container &lt; std :: vector &lt; std :: int64_t ... &gt; &gt;&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="verify/379736d8a0a2ebc47bab9122352c3777/0001.test.cpp">
            <location file="adapter/internal/container_extender.hpp" line="29" column="5"/>
        </error>
        <error id="duplicateBreak" severity="style" msg="Consecutive return, break, continue, goto or throw statements are unnecessary." verbose="Consecutive return, break, continue, goto or throw statements are unnecessary. The second statement can never be executed, and so should be removed." cwe="561" file0="verify/379736d8a0a2ebc47bab9122352c3777/0001.test.cpp">
            <location file="adapter/set.hpp" line="67" column="9"/>
        </error>
        <error id="duplicateBreak" severity="style" msg="Consecutive return, break, continue, goto or throw statements are unnecessary." verbose="Consecutive return, break, continue, goto or throw statements are unnecessary. The second statement can never be executed, and so should be removed." cwe="561" file0="verify/379736d8a0a2ebc47bab9122352c3777/0001.test.cpp">
            <location file="adapter/set.hpp" line="72" column="9"/>
        </error>
        <error id="unsignedLessThanZero" severity="style" msg="Checking if unsigned expression &apos;_count&apos; is less than zero." verbose="The unsigned expression &apos;_count&apos; will never be negative so it is either pointless or an error to check if it is." cwe="570" file0="verify/379736d8a0a2ebc47bab9122352c3777/0001.test.cpp">
            <location file="adapter/set.hpp" line="83" column="23" info="Unsigned less than zero"/>
        </error>
        <error id="unsignedLessThanZero" severity="style" msg="Checking if unsigned expression &apos;_count&apos; is less than zero." verbose="The unsigned expression &apos;_count&apos; will never be negative so it is either pointless or an error to check if it is." cwe="570" file0="verify/379736d8a0a2ebc47bab9122352c3777/0001.test.cpp">
            <location file="adapter/set.hpp" line="96" column="23" info="Unsigned less than zero"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;core&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;core&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="verify/395546397237aa9d304db291eb291247/0001.test.cpp">
            <location file="data_structure/disjoint_sparse_table.hpp" line="120" column="5"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;rolling_hash_impl&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;rolling_hash_impl&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="verify/395546397237aa9d304db291eb291247/0001.test.cpp">
            <location file="algebraic/rolling_hash.hpp" line="43" column="5"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;rolling_hash&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;rolling_hash&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="verify/395546397237aa9d304db291eb291247/0001.test.cpp">
            <location file="algebraic/rolling_hash.hpp" line="73" column="5"/>
        </error>
        <error id="unsignedLessThanZero" severity="style" msg="Checking if unsigned expression &apos;p&apos; is less than zero." verbose="The unsigned expression &apos;p&apos; will never be negative so it is either pointless or an error to check if it is." cwe="570" file0="verify/395546397237aa9d304db291eb291247/0001.test.cpp">
            <location file="data_structure/disjoint_sparse_table.hpp" line="109" column="18" info="Unsigned less than zero"/>
        </error>
        <error id="unsignedPositive" severity="style" msg="Unsigned expression &apos;l&apos; can&apos;t be negative so it is unnecessary to test it." verbose="Unsigned expression &apos;l&apos; can&apos;t be negative so it is unnecessary to test it." cwe="570" file0="verify/395546397237aa9d304db291eb291247/0001.test.cpp">
            <location file="data_structure/disjoint_sparse_table.hpp" line="148" column="18" info="Unsigned positive"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;lcs_sizes&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;lcs_sizes&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="verify/4d77dd9692cc1bda6684d9e1e7f1f63d/0001.test.cpp">
            <location file="iterable/longest_common_subsequence.hpp" line="27" column="5"/>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;dsu::_group_count&apos; is not initialized in the constructor." verbose="Member variable &apos;dsu::_group_count&apos; is not initialized in the constructor." cwe="398" file0="verify/52ef4598e22f4b57a786e9c0c3e0613f/0001.test.cpp">
            <location file="data_structure/disjoint_set_union.hpp" line="29" column="5"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;extended_container &lt; std :: vector &lt; vector &lt; std :: int32_t &gt; ... &gt; &gt;&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;extended_container &lt; std :: vector &lt; vector &lt; std :: int32_t &gt; ... &gt; &gt;&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="verify/52ef4598e22f4b57a786e9c0c3e0613f/0001.test.cpp">
            <location file="adapter/internal/container_extender.hpp" line="29" column="5"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;extended_container &lt; std :: vector &lt; size_type ... &gt; &gt;&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;extended_container &lt; std :: vector &lt; size_type ... &gt; &gt;&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="verify/52ef4598e22f4b57a786e9c0c3e0613f/0001.test.cpp">
            <location file="adapter/internal/container_extender.hpp" line="29" column="5"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;extended_container &lt; std :: vector &lt; vector &lt; size_type &gt; ... &gt; &gt;&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;extended_container &lt; std :: vector &lt; vector &lt; size_type &gt; ... &gt; &gt;&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="verify/52ef4598e22f4b57a786e9c0c3e0613f/0001.test.cpp">
            <location file="adapter/internal/container_extender.hpp" line="29" column="5"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;extended_container &lt; std :: vector &lt; long long ... &gt; &gt;&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;extended_container &lt; std :: vector &lt; long long ... &gt; &gt;&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="verify/52ef4598e22f4b57a786e9c0c3e0613f/0001.test.cpp">
            <location file="adapter/internal/container_extender.hpp" line="29" column="5"/>
        </error>
        <error id="useStlAlgorithm" severity="style" msg="Consider using std::transform algorithm instead of a raw loop." verbose="Consider using std::transform algorithm instead of a raw loop." cwe="398" file0="verify/52ef4598e22f4b57a786e9c0c3e0613f/0001.test.cpp">
            <location file="graph/spanning_tree.hpp" line="25" column="15"/>
        </error>
        <error id="useStlAlgorithm" severity="style" msg="Consider using std::transform algorithm instead of a raw loop." verbose="Consider using std::transform algorithm instead of a raw loop." cwe="398" file0="verify/52ef4598e22f4b57a786e9c0c3e0613f/0001.test.cpp">
            <location file="graph/manhattan_minimum_spanning_tree.hpp" line="61" column="23"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;extended_container &lt; std :: vector &lt; int ... &gt; &gt;&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;extended_container &lt; std :: vector &lt; int ... &gt; &gt;&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="verify/66ab8201d3befd1de7abe16dd2b5a788/0001.test.cpp">
            <location file="adapter/internal/container_extender.hpp" line="29" column="5"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;valarray &lt; int &gt;&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;valarray &lt; int &gt;&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="verify/6fc0704ca8591b23fddbba3f0ddb0d62/0001.test.cpp">
            <location file="adapter/valarray.hpp" line="52" column="5"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;valarray &lt; int &gt;&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;valarray &lt; int &gt;&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="verify/6fc0704ca8591b23fddbba3f0ddb0d62/0001.test.cpp">
            <location file="adapter/valarray.hpp" line="56" column="5"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;valarray &lt; int &gt;&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;valarray &lt; int &gt;&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="verify/6fc0704ca8591b23fddbba3f0ddb0d62/0001.test.cpp">
            <location file="adapter/valarray.hpp" line="57" column="5"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;valarray &lt; int &gt;&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;valarray &lt; int &gt;&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="verify/6fc0704ca8591b23fddbba3f0ddb0d62/0001.test.cpp">
            <location file="adapter/valarray.hpp" line="58" column="5"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;valarray &lt; int &gt;&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;valarray &lt; int &gt;&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="verify/6fc0704ca8591b23fddbba3f0ddb0d62/0001.test.cpp">
            <location file="adapter/valarray.hpp" line="59" column="5"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;valarray &lt; int &gt;&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;valarray &lt; int &gt;&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="verify/6fc0704ca8591b23fddbba3f0ddb0d62/0001.test.cpp">
            <location file="adapter/valarray.hpp" line="60" column="5"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;extended_container &lt; lib :: std :: valarray &lt; int &gt; &gt;&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;extended_container &lt; lib :: std :: valarray &lt; int &gt; &gt;&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="verify/6fc0704ca8591b23fddbba3f0ddb0d62/0001.test.cpp">
            <location file="adapter/internal/container_extender.hpp" line="29" column="5"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;compressed_wavelet_matrix &lt; long long , std :: unordered_map &gt;&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;compressed_wavelet_matrix &lt; long long , std :: unordered_map &gt;&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="verify/6fc0704ca8591b23fddbba3f0ddb0d62/0002.test.cpp">
            <location file="data_structure/wavelet_matrix.hpp" line="525" column="5"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;compressed &lt; long long , valarray &lt; u32 &gt; &gt;&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;compressed &lt; long long , valarray &lt; u32 &gt; &gt;&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="verify/6fc0704ca8591b23fddbba3f0ddb0d62/0002.test.cpp">
            <location file="iterable/compressed.hpp" line="32" column="5"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;compressed &lt; long long , valarray &lt; u32 &gt; &gt;&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;compressed &lt; long long , valarray &lt; u32 &gt; &gt;&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="verify/6fc0704ca8591b23fddbba3f0ddb0d62/0002.test.cpp">
            <location file="iterable/compressed.hpp" line="48" column="5"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;valarray &lt; u32 &gt;&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;valarray &lt; u32 &gt;&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="verify/6fc0704ca8591b23fddbba3f0ddb0d62/0002.test.cpp">
            <location file="adapter/valarray.hpp" line="52" column="5"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;valarray &lt; u32 &gt;&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;valarray &lt; u32 &gt;&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="verify/6fc0704ca8591b23fddbba3f0ddb0d62/0002.test.cpp">
            <location file="adapter/valarray.hpp" line="56" column="5"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;valarray &lt; u32 &gt;&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;valarray &lt; u32 &gt;&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="verify/6fc0704ca8591b23fddbba3f0ddb0d62/0002.test.cpp">
            <location file="adapter/valarray.hpp" line="57" column="5"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;valarray &lt; u32 &gt;&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;valarray &lt; u32 &gt;&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="verify/6fc0704ca8591b23fddbba3f0ddb0d62/0002.test.cpp">
            <location file="adapter/valarray.hpp" line="58" column="5"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;valarray &lt; u32 &gt;&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;valarray &lt; u32 &gt;&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="verify/6fc0704ca8591b23fddbba3f0ddb0d62/0002.test.cpp">
            <location file="adapter/valarray.hpp" line="59" column="5"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;valarray &lt; u32 &gt;&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;valarray &lt; u32 &gt;&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="verify/6fc0704ca8591b23fddbba3f0ddb0d62/0002.test.cpp">
            <location file="adapter/valarray.hpp" line="60" column="5"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;extended_container &lt; lib :: std :: valarray &lt; u32 &gt; &gt;&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;extended_container &lt; lib :: std :: valarray &lt; u32 &gt; &gt;&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="verify/6fc0704ca8591b23fddbba3f0ddb0d62/0002.test.cpp">
            <location file="adapter/internal/container_extender.hpp" line="29" column="5"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;valarray &lt; int &gt;&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;valarray &lt; int &gt;&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="verify/6fc0704ca8591b23fddbba3f0ddb0d62/0001.test.cpp">
            <location file="adapter/valarray.hpp" line="63" column="25"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;valarray &lt; u32 &gt;&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;valarray &lt; u32 &gt;&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="verify/6fc0704ca8591b23fddbba3f0ddb0d62/0002.test.cpp">
            <location file="adapter/valarray.hpp" line="63" column="25"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;core&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;core&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="verify/70d19e034b264957f5ec924995be8afd/0001.test.cpp">
            <location file="data_structure/fenwick_tree.hpp" line="142" column="5"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;fenwick_tree&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;fenwick_tree&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="verify/70d19e034b264957f5ec924995be8afd/0001.test.cpp">
            <location file="action/range_add.hpp" line="59" column="5"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;fenwick_tree&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;fenwick_tree&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="verify/70d19e034b264957f5ec924995be8afd/0001.test.cpp">
            <location file="action/range_add.hpp" line="62" column="5"/>
        </error>
        <error id="unsignedPositive" severity="style" msg="Unsigned expression &apos;l&apos; can&apos;t be negative so it is unnecessary to test it." verbose="Unsigned expression &apos;l&apos; can&apos;t be negative so it is unnecessary to test it." cwe="570" file0="verify/70d19e034b264957f5ec924995be8afd/0001.test.cpp">
            <location file="data_structure/fenwick_tree.hpp" line="88" column="18" info="Unsigned positive"/>
        </error>
        <error id="unsignedPositive" severity="style" msg="Unsigned expression &apos;r&apos; can&apos;t be negative so it is unnecessary to test it." verbose="Unsigned expression &apos;r&apos; can&apos;t be negative so it is unnecessary to test it." cwe="570" file0="verify/70d19e034b264957f5ec924995be8afd/0001.test.cpp">
            <location file="data_structure/fenwick_tree.hpp" line="102" column="18" info="Unsigned positive"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" file0="verify/70d19e034b264957f5ec924995be8afd/0001.test.cpp">
            <location file="data_structure/fenwick_tree.hpp" line="64" column="13"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;valarray &lt; std :: int32_t &gt;&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;valarray &lt; std :: int32_t &gt;&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="verify/7b4f08f63f1fcc26ae2959c8c6de9efe/0001.test.cpp">
            <location file="adapter/valarray.hpp" line="52" column="5"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;valarray &lt; std :: int32_t &gt;&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;valarray &lt; std :: int32_t &gt;&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="verify/7b4f08f63f1fcc26ae2959c8c6de9efe/0001.test.cpp">
            <location file="adapter/valarray.hpp" line="56" column="5"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;valarray &lt; std :: int32_t &gt;&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;valarray &lt; std :: int32_t &gt;&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="verify/7b4f08f63f1fcc26ae2959c8c6de9efe/0001.test.cpp">
            <location file="adapter/valarray.hpp" line="57" column="5"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;valarray &lt; std :: int32_t &gt;&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;valarray &lt; std :: int32_t &gt;&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="verify/7b4f08f63f1fcc26ae2959c8c6de9efe/0001.test.cpp">
            <location file="adapter/valarray.hpp" line="58" column="5"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;valarray &lt; std :: int32_t &gt;&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;valarray &lt; std :: int32_t &gt;&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="verify/7b4f08f63f1fcc26ae2959c8c6de9efe/0001.test.cpp">
            <location file="adapter/valarray.hpp" line="59" column="5"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;valarray &lt; std :: int32_t &gt;&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;valarray &lt; std :: int32_t &gt;&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="verify/7b4f08f63f1fcc26ae2959c8c6de9efe/0001.test.cpp">
            <location file="adapter/valarray.hpp" line="60" column="5"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;extended_container &lt; lib :: std :: valarray &lt; std :: int32_t &gt; &gt;&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;extended_container &lt; lib :: std :: valarray &lt; std :: int32_t &gt; &gt;&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="verify/7b4f08f63f1fcc26ae2959c8c6de9efe/0001.test.cpp">
            <location file="adapter/internal/container_extender.hpp" line="29" column="5"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;core&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;core&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="verify/857afc16bc9bf8d936851d86478706ec/0001.test.cpp">
            <location file="data_structure/segment_tree.hpp" line="113" column="5"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;core&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;core&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="verify/857afc16bc9bf8d936851d86478706ec/0001.test.cpp">
            <location file="data_structure/segment_tree.hpp" line="116" column="5"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;combined&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;combined&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="verify/857afc16bc9bf8d936851d86478706ec/0001.test.cpp">
            <location file="algebraic/combined.hpp" line="38" column="5"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;set_adapter_impl&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;set_adapter_impl&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="verify/857afc16bc9bf8d936851d86478706ec/0001.test.cpp">
            <location file="data_structure/adapter/set.hpp" line="63" column="5"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;set_adapter&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;set_adapter&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="verify/857afc16bc9bf8d936851d86478706ec/0001.test.cpp">
            <location file="data_structure/adapter/set.hpp" line="127" column="5"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;set_adapter&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;set_adapter&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="verify/857afc16bc9bf8d936851d86478706ec/0001.test.cpp">
            <location file="data_structure/adapter/set.hpp" line="130" column="5"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;set_adapter&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;set_adapter&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="verify/857afc16bc9bf8d936851d86478706ec/0001.test.cpp">
            <location file="data_structure/adapter/set.hpp" line="140" column="5"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;multiset_adapter&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;multiset_adapter&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="verify/857afc16bc9bf8d936851d86478706ec/0001.test.cpp">
            <location file="data_structure/adapter/set.hpp" line="184" column="5"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;multiset_adapter&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;multiset_adapter&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="verify/857afc16bc9bf8d936851d86478706ec/0001.test.cpp">
            <location file="data_structure/adapter/set.hpp" line="187" column="5"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;multiset_adapter&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;multiset_adapter&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="verify/857afc16bc9bf8d936851d86478706ec/0001.test.cpp">
            <location file="data_structure/adapter/set.hpp" line="197" column="5"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;valarray &lt; bool &gt;&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;valarray &lt; bool &gt;&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="verify/857afc16bc9bf8d936851d86478706ec/0001.test.cpp">
            <location file="adapter/valarray.hpp" line="52" column="5"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;valarray &lt; bool &gt;&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;valarray &lt; bool &gt;&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="verify/857afc16bc9bf8d936851d86478706ec/0001.test.cpp">
            <location file="adapter/valarray.hpp" line="56" column="5"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;valarray &lt; bool &gt;&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;valarray &lt; bool &gt;&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="verify/857afc16bc9bf8d936851d86478706ec/0001.test.cpp">
            <location file="adapter/valarray.hpp" line="57" column="5"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;valarray &lt; bool &gt;&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;valarray &lt; bool &gt;&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="verify/857afc16bc9bf8d936851d86478706ec/0001.test.cpp">
            <location file="adapter/valarray.hpp" line="58" column="5"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;valarray &lt; bool &gt;&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;valarray &lt; bool &gt;&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="verify/857afc16bc9bf8d936851d86478706ec/0001.test.cpp">
            <location file="adapter/valarray.hpp" line="59" column="5"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;valarray &lt; bool &gt;&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;valarray &lt; bool &gt;&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="verify/857afc16bc9bf8d936851d86478706ec/0001.test.cpp">
            <location file="adapter/valarray.hpp" line="60" column="5"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;extended_container &lt; lib :: std :: valarray &lt; bool &gt; &gt;&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;extended_container &lt; lib :: std :: valarray &lt; bool &gt; &gt;&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="verify/857afc16bc9bf8d936851d86478706ec/0001.test.cpp">
            <location file="adapter/internal/container_extender.hpp" line="29" column="5"/>
        </error>
        <error id="unsignedPositive" severity="style" msg="Unsigned expression &apos;k&apos; can&apos;t be negative so it is unnecessary to test it." verbose="Unsigned expression &apos;k&apos; can&apos;t be negative so it is unnecessary to test it." cwe="570" file0="verify/857afc16bc9bf8d936851d86478706ec/0001.test.cpp">
            <location file="data_structure/adapter/set.hpp" line="157" column="18" info="Unsigned positive"/>
        </error>
        <error id="unsignedPositive" severity="style" msg="Unsigned expression &apos;k&apos; can&apos;t be negative so it is unnecessary to test it." verbose="Unsigned expression &apos;k&apos; can&apos;t be negative so it is unnecessary to test it." cwe="570" file0="verify/857afc16bc9bf8d936851d86478706ec/0001.test.cpp">
            <location file="data_structure/adapter/set.hpp" line="164" column="18" info="Unsigned positive"/>
        </error>
        <error id="unsignedPositive" severity="style" msg="Unsigned expression &apos;k&apos; can&apos;t be negative so it is unnecessary to test it." verbose="Unsigned expression &apos;k&apos; can&apos;t be negative so it is unnecessary to test it." cwe="570" file0="verify/857afc16bc9bf8d936851d86478706ec/0001.test.cpp">
            <location file="data_structure/adapter/set.hpp" line="215" column="18" info="Unsigned positive"/>
        </error>
        <error id="unsignedPositive" severity="style" msg="Unsigned expression &apos;k&apos; can&apos;t be negative so it is unnecessary to test it." verbose="Unsigned expression &apos;k&apos; can&apos;t be negative so it is unnecessary to test it." cwe="570" file0="verify/857afc16bc9bf8d936851d86478706ec/0001.test.cpp">
            <location file="data_structure/adapter/set.hpp" line="224" column="18" info="Unsigned positive"/>
        </error>
        <error id="shadowVariable" severity="style" msg="Local variable &apos;p&apos; shadows outer variable" verbose="Local variable &apos;p&apos; shadows outer variable" cwe="398" file0="verify/857afc16bc9bf8d936851d86478706ec/0001.test.cpp">
            <location file="data_structure/segment_tree.hpp" line="133" column="9" info="Shadow variable"/>
            <location file="data_structure/segment_tree.hpp" line="131" column="19" info="Shadowed declaration"/>
        </error>
        <error id="shadowVariable" severity="style" msg="Local variable &apos;t&apos; shadows outer variable" verbose="Local variable &apos;t&apos; shadows outer variable" cwe="398" file0="verify/857afc16bc9bf8d936851d86478706ec/0001.test.cpp">
            <location file="verify/857afc16bc9bf8d936851d86478706ec/0001.test.cpp" line="31" column="13" info="Shadow variable"/>
            <location file="verify/857afc16bc9bf8d936851d86478706ec/0001.test.cpp" line="22" column="25" info="Shadowed declaration"/>
        </error>
        <error id="syntaxError" severity="error" msg="syntax error" verbose="syntax error" file0="verify/857afc16bc9bf8d936851d86478706ec/0002.test.cpp">
            <location file="algebraic/combined.hpp" line="27" column="1"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;valarray &lt; bool &gt;&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;valarray &lt; bool &gt;&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="verify/857afc16bc9bf8d936851d86478706ec/0001.test.cpp">
            <location file="adapter/valarray.hpp" line="63" column="25"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;valarray &lt; std :: int32_t &gt;&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;valarray &lt; std :: int32_t &gt;&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="verify/7b4f08f63f1fcc26ae2959c8c6de9efe/0001.test.cpp">
            <location file="adapter/valarray.hpp" line="63" column="25"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;accumulation &lt; long long , valarray &lt; long &gt; &gt;&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;accumulation &lt; long long , valarray &lt; long &gt; &gt;&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="verify/8772fb7939e8e3f9782e1b5f912e1a8a/0001.test.cpp">
            <location file="iterable/accumulation.hpp" line="36" column="5"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;valarray &lt; long &gt;&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;valarray &lt; long &gt;&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="verify/8772fb7939e8e3f9782e1b5f912e1a8a/0001.test.cpp">
            <location file="adapter/valarray.hpp" line="52" column="5"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;valarray &lt; long &gt;&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;valarray &lt; long &gt;&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="verify/8772fb7939e8e3f9782e1b5f912e1a8a/0001.test.cpp">
            <location file="adapter/valarray.hpp" line="56" column="5"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;valarray &lt; long &gt;&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;valarray &lt; long &gt;&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="verify/8772fb7939e8e3f9782e1b5f912e1a8a/0001.test.cpp">
            <location file="adapter/valarray.hpp" line="57" column="5"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;valarray &lt; long &gt;&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;valarray &lt; long &gt;&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="verify/8772fb7939e8e3f9782e1b5f912e1a8a/0001.test.cpp">
            <location file="adapter/valarray.hpp" line="58" column="5"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;valarray &lt; long &gt;&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;valarray &lt; long &gt;&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="verify/8772fb7939e8e3f9782e1b5f912e1a8a/0001.test.cpp">
            <location file="adapter/valarray.hpp" line="59" column="5"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;valarray &lt; long &gt;&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;valarray &lt; long &gt;&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="verify/8772fb7939e8e3f9782e1b5f912e1a8a/0001.test.cpp">
            <location file="adapter/valarray.hpp" line="60" column="5"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;extended_container &lt; lib :: std :: valarray &lt; long &gt; &gt;&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;extended_container &lt; lib :: std :: valarray &lt; long &gt; &gt;&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="verify/8772fb7939e8e3f9782e1b5f912e1a8a/0001.test.cpp">
            <location file="adapter/internal/container_extender.hpp" line="29" column="5"/>
        </error>
        <error id="unsignedLessThanZero" severity="style" msg="Checking if unsigned expression &apos;x&apos; is less than zero." verbose="The unsigned expression &apos;x&apos; will never be negative so it is either pointless or an error to check if it is." cwe="570" file0="verify/8772fb7939e8e3f9782e1b5f912e1a8a/0001.test.cpp">
            <location file="iterable/accumulation.hpp" line="76" column="18" info="Unsigned less than zero"/>
        </error>
        <error id="unsignedPositive" severity="style" msg="Unsigned expression &apos;a&apos; can&apos;t be negative so it is unnecessary to test it." verbose="Unsigned expression &apos;a&apos; can&apos;t be negative so it is unnecessary to test it." cwe="570" file0="verify/8772fb7939e8e3f9782e1b5f912e1a8a/0001.test.cpp">
            <location file="iterable/accumulation.hpp" line="107" column="18" info="Unsigned positive"/>
        </error>
        <error id="unsignedPositive" severity="style" msg="Unsigned expression &apos;c&apos; can&apos;t be negative so it is unnecessary to test it." verbose="Unsigned expression &apos;c&apos; can&apos;t be negative so it is unnecessary to test it." cwe="570" file0="verify/8772fb7939e8e3f9782e1b5f912e1a8a/0001.test.cpp">
            <location file="iterable/accumulation.hpp" line="108" column="18" info="Unsigned positive"/>
        </error>
        <error id="unsignedLessThanZero" severity="style" msg="Checking if unsigned expression &apos;x&apos; is less than zero." verbose="The unsigned expression &apos;x&apos; will never be negative so it is either pointless or an error to check if it is." cwe="570" file0="verify/8772fb7939e8e3f9782e1b5f912e1a8a/0001.test.cpp">
            <location file="iterable/accumulation.hpp" line="28" column="18" info="Unsigned less than zero"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;valarray &lt; std :: int64_t &gt;&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;valarray &lt; std :: int64_t &gt;&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="verify/8772fb7939e8e3f9782e1b5f912e1a8a/0003.test.cpp">
            <location file="adapter/valarray.hpp" line="52" column="5"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;valarray &lt; std :: int64_t &gt;&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;valarray &lt; std :: int64_t &gt;&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="verify/8772fb7939e8e3f9782e1b5f912e1a8a/0003.test.cpp">
            <location file="adapter/valarray.hpp" line="56" column="5"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;valarray &lt; std :: int64_t &gt;&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;valarray &lt; std :: int64_t &gt;&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="verify/8772fb7939e8e3f9782e1b5f912e1a8a/0003.test.cpp">
            <location file="adapter/valarray.hpp" line="57" column="5"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;valarray &lt; std :: int64_t &gt;&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;valarray &lt; std :: int64_t &gt;&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="verify/8772fb7939e8e3f9782e1b5f912e1a8a/0003.test.cpp">
            <location file="adapter/valarray.hpp" line="58" column="5"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;valarray &lt; std :: int64_t &gt;&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;valarray &lt; std :: int64_t &gt;&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="verify/8772fb7939e8e3f9782e1b5f912e1a8a/0003.test.cpp">
            <location file="adapter/valarray.hpp" line="59" column="5"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;valarray &lt; std :: int64_t &gt;&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;valarray &lt; std :: int64_t &gt;&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="verify/8772fb7939e8e3f9782e1b5f912e1a8a/0003.test.cpp">
            <location file="adapter/valarray.hpp" line="60" column="5"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;extended_container &lt; lib :: std :: valarray &lt; std :: int64_t &gt; &gt;&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;extended_container &lt; lib :: std :: valarray &lt; std :: int64_t &gt; &gt;&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="verify/8772fb7939e8e3f9782e1b5f912e1a8a/0003.test.cpp">
            <location file="adapter/internal/container_extender.hpp" line="29" column="5"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;accumulation&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;accumulation&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="verify/8772fb7939e8e3f9782e1b5f912e1a8a/0004.test.cpp">
            <location file="iterable/accumulation.hpp" line="36" column="5"/>
        </error>
        <error id="unsignedPositive" severity="style" msg="Unsigned expression &apos;left&apos; can&apos;t be negative so it is unnecessary to test it." verbose="Unsigned expression &apos;left&apos; can&apos;t be negative so it is unnecessary to test it." cwe="570" file0="verify/8772fb7939e8e3f9782e1b5f912e1a8a/0004.test.cpp">
            <location file="iterable/accumulation.hpp" line="58" column="18" info="Unsigned positive"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;valarray &lt; long &gt;&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;valarray &lt; long &gt;&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="verify/8772fb7939e8e3f9782e1b5f912e1a8a/0001.test.cpp">
            <location file="adapter/valarray.hpp" line="63" column="25"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;valarray &lt; std :: int64_t &gt;&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;valarray &lt; std :: int64_t &gt;&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="verify/8772fb7939e8e3f9782e1b5f912e1a8a/0003.test.cpp">
            <location file="adapter/valarray.hpp" line="63" column="25"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;extended_container &lt; std :: vector &lt; lib :: std :: pair &lt; int , int &gt; ... &gt; &gt;&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;extended_container &lt; std :: vector &lt; lib :: std :: pair &lt; int , int &gt; ... &gt; &gt;&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="verify/ae6c30dbf817884d7fa26c063d8b7fed/0001.test.cpp">
            <location file="adapter/internal/container_extender.hpp" line="29" column="5"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;modint &lt; static_builtin_modular_context_32bit &lt; 998244353 &gt; &gt;&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;modint &lt; static_builtin_modular_context_32bit &lt; 998244353 &gt; &gt;&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="verify/b04f21a0643d8662195331573f60ee74/0001.test.cpp">
            <location file="numeric/modular/modint.hpp" line="108" column="15"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;modint &lt; static_builtin_modular_context_64bit &lt; 998244353 &gt; &gt;&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;modint &lt; static_builtin_modular_context_64bit &lt; 998244353 &gt; &gt;&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="verify/b04f21a0643d8662195331573f60ee74/0002.test.cpp">
            <location file="numeric/modular/modint.hpp" line="108" column="15"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;modint &lt; static_barrett_modular_context_32bit &lt; 998244353 &gt; &gt;&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;modint &lt; static_barrett_modular_context_32bit &lt; 998244353 &gt; &gt;&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="verify/b04f21a0643d8662195331573f60ee74/0003.test.cpp">
            <location file="numeric/modular/modint.hpp" line="108" column="15"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;modint &lt; static_barrett_modular_context_64bit &lt; 998244353 &gt; &gt;&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;modint &lt; static_barrett_modular_context_64bit &lt; 998244353 &gt; &gt;&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="verify/b04f21a0643d8662195331573f60ee74/0004.test.cpp">
            <location file="numeric/modular/modint.hpp" line="108" column="15"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;modint &lt; static_montgomery_modular_context_32bit &lt; 998244353 &gt; &gt;&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;modint &lt; static_montgomery_modular_context_32bit &lt; 998244353 &gt; &gt;&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="verify/b04f21a0643d8662195331573f60ee74/0005.test.cpp">
            <location file="numeric/modular/modint.hpp" line="108" column="15"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;modint &lt; static_montgomery_modular_context_64bit &lt; 998244353 &gt; &gt;&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;modint &lt; static_montgomery_modular_context_64bit &lt; 998244353 &gt; &gt;&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="verify/b04f21a0643d8662195331573f60ee74/0006.test.cpp">
            <location file="numeric/modular/modint.hpp" line="108" column="15"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;modint &lt; static_arbitrary_montgomery_modular_context_32bit &lt; 998244353 &gt; &gt;&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;modint &lt; static_arbitrary_montgomery_modular_context_32bit &lt; 998244353 &gt; &gt;&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="verify/b04f21a0643d8662195331573f60ee74/0007.test.cpp">
            <location file="numeric/modular/modint.hpp" line="108" column="15"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;modint &lt; static_arbitrary_montgomery_modular_context_64bit &lt; 998244353 &gt; &gt;&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;modint &lt; static_arbitrary_montgomery_modular_context_64bit &lt; 998244353 &gt; &gt;&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="verify/b04f21a0643d8662195331573f60ee74/0008.test.cpp">
            <location file="numeric/modular/modint.hpp" line="108" column="15"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;modint &lt; dynamic_builtin_modular_context_32bit &lt; -1 &gt; &gt;&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;modint &lt; dynamic_builtin_modular_context_32bit &lt; -1 &gt; &gt;&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="verify/b04f21a0643d8662195331573f60ee74/0009.test.cpp">
            <location file="numeric/modular/modint.hpp" line="108" column="15"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;modint &lt; dynamic_builtin_modular_context_64bit &lt; -1 &gt; &gt;&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;modint &lt; dynamic_builtin_modular_context_64bit &lt; -1 &gt; &gt;&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="verify/b04f21a0643d8662195331573f60ee74/0010.test.cpp">
            <location file="numeric/modular/modint.hpp" line="108" column="15"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;modint &lt; dynamic_barrett_modular_context_64bit &lt; -1 &gt; &gt;&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;modint &lt; dynamic_barrett_modular_context_64bit &lt; -1 &gt; &gt;&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="verify/b04f21a0643d8662195331573f60ee74/0012.test.cpp">
            <location file="numeric/modular/modint.hpp" line="108" column="15"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;modint &lt; dynamic_montgomery_modular_context_32bit &lt; -1 &gt; &gt;&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;modint &lt; dynamic_montgomery_modular_context_32bit &lt; -1 &gt; &gt;&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="verify/b04f21a0643d8662195331573f60ee74/0013.test.cpp">
            <location file="numeric/modular/modint.hpp" line="108" column="15"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;modint &lt; dynamic_montgomery_modular_context_64bit &lt; -1 &gt; &gt;&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;modint &lt; dynamic_montgomery_modular_context_64bit &lt; -1 &gt; &gt;&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="verify/b04f21a0643d8662195331573f60ee74/0014.test.cpp">
            <location file="numeric/modular/modint.hpp" line="108" column="15"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;modint &lt; dynamic_arbitrary_montgomery_modular_context_64bit &lt; -1 &gt; &gt;&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;modint &lt; dynamic_arbitrary_montgomery_modular_context_64bit &lt; -1 &gt; &gt;&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="verify/b04f21a0643d8662195331573f60ee74/0016.test.cpp">
            <location file="numeric/modular/modint.hpp" line="108" column="15"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;valarray &lt; std :: uint32_t &gt;&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;valarray &lt; std :: uint32_t &gt;&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="verify/b3030ba570c6fd66c331f83d50f8669a/0001.test.cpp">
            <location file="adapter/valarray.hpp" line="52" column="5"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;valarray &lt; std :: uint32_t &gt;&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;valarray &lt; std :: uint32_t &gt;&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="verify/b3030ba570c6fd66c331f83d50f8669a/0001.test.cpp">
            <location file="adapter/valarray.hpp" line="56" column="5"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;valarray &lt; std :: uint32_t &gt;&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;valarray &lt; std :: uint32_t &gt;&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="verify/b3030ba570c6fd66c331f83d50f8669a/0001.test.cpp">
            <location file="adapter/valarray.hpp" line="57" column="5"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;valarray &lt; std :: uint32_t &gt;&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;valarray &lt; std :: uint32_t &gt;&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="verify/b3030ba570c6fd66c331f83d50f8669a/0001.test.cpp">
            <location file="adapter/valarray.hpp" line="58" column="5"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;valarray &lt; std :: uint32_t &gt;&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;valarray &lt; std :: uint32_t &gt;&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="verify/b3030ba570c6fd66c331f83d50f8669a/0001.test.cpp">
            <location file="adapter/valarray.hpp" line="59" column="5"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;valarray &lt; std :: uint32_t &gt;&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;valarray &lt; std :: uint32_t &gt;&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="verify/b3030ba570c6fd66c331f83d50f8669a/0001.test.cpp">
            <location file="adapter/valarray.hpp" line="60" column="5"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;extended_container &lt; lib :: std :: valarray &lt; std :: uint32_t &gt; &gt;&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;extended_container &lt; lib :: std :: valarray &lt; std :: uint32_t &gt; &gt;&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="verify/b3030ba570c6fd66c331f83d50f8669a/0001.test.cpp">
            <location file="adapter/internal/container_extender.hpp" line="29" column="5"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;compressed_wavelet_matrix &lt; std :: uint32_t , std :: unordered_map &gt;&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;compressed_wavelet_matrix &lt; std :: uint32_t , std :: unordered_map &gt;&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="verify/b3030ba570c6fd66c331f83d50f8669a/0003.test.cpp">
            <location file="data_structure/wavelet_matrix.hpp" line="525" column="5"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;compressed &lt; std :: uint32_t , valarray &lt; u32 &gt; &gt;&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;compressed &lt; std :: uint32_t , valarray &lt; u32 &gt; &gt;&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="verify/b3030ba570c6fd66c331f83d50f8669a/0003.test.cpp">
            <location file="iterable/compressed.hpp" line="32" column="5"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;compressed &lt; std :: uint32_t , valarray &lt; u32 &gt; &gt;&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;compressed &lt; std :: uint32_t , valarray &lt; u32 &gt; &gt;&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="verify/b3030ba570c6fd66c331f83d50f8669a/0003.test.cpp">
            <location file="iterable/compressed.hpp" line="48" column="5"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;valarray &lt; std :: uint32_t &gt;&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;valarray &lt; std :: uint32_t &gt;&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="verify/b3030ba570c6fd66c331f83d50f8669a/0001.test.cpp">
            <location file="adapter/valarray.hpp" line="63" column="25"/>
        </error>
        <error id="unusedPrivateFunction" severity="style" msg="Unused private function: &apos;edge &lt; internal long , std :: int64_t &gt;::unique&apos;" verbose="Unused private function: &apos;edge &lt; internal long , std :: int64_t &gt;::unique&apos;" cwe="398" file0="verify/c72f93349b93b670650f718a9bfed4ff/0001.test.cpp">
            <location file="structure/graph.hpp" line="36" column="36"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;lowest_common_ancestor&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;lowest_common_ancestor&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="verify/c72f93349b93b670650f718a9bfed4ff/0001.test.cpp">
            <location file="graph/lowest_common_ancestor.hpp" line="45" column="5"/>
        </error>
        <error id="unsignedPositive" severity="style" msg="Unsigned expression &apos;--k&apos; can&apos;t be negative so it is unnecessary to test it." verbose="Unsigned expression &apos;--k&apos; can&apos;t be negative so it is unnecessary to test it." cwe="570" file0="verify/c72f93349b93b670650f718a9bfed4ff/0001.test.cpp">
            <location file="graph/lowest_common_ancestor.hpp" line="76" column="9" info="Unsigned positive"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;extended_container &lt; std :: vector &lt; std :: pair &lt; size_type , size_type &gt; ... &gt; &gt;&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;extended_container &lt; std :: vector &lt; std :: pair &lt; size_type , size_type &gt; ... &gt; &gt;&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="verify/de2a20b2f4f2e91bd80377115ed6307e/0001.test.cpp">
            <location file="adapter/internal/container_extender.hpp" line="29" column="5"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;binomial_coefficient &lt; std :: int32_t , std :: int32_t &gt;&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;binomial_coefficient &lt; std :: int32_t , std :: int32_t &gt;&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="verify/e59545868aa63514fe1f6650450e327d/0001.test.cpp">
            <location file="numeric/binomial_coefficient.hpp" line="241" column="5"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;binomial_coefficient&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;binomial_coefficient&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="verify/e59545868aa63514fe1f6650450e327d/0002.test.cpp">
            <location file="numeric/binomial_coefficient.hpp" line="241" column="5"/>
        </error>
    </errors>
</results>
