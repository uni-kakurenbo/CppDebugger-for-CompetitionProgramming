/*
 * @uni_kakurenbo
 * https://github.com/uni-kakurenbo/competitive-programming-workspace
 *
 * CC0 1.0  http://creativecommons.org/publicdomain/zero/1.0/deed.ja
 */
/* #language C++ 20 GCC */


#define PROBLEM "https://atcoder.jp/contests/abc125/tasks/abc125_c"

#include "snippet/aliases.hpp"
#include "snippet/fast_io.hpp"
#include "snippet/iterations.hpp"
#include "adapter/io.hpp"
#include "data_structure/disjoint_sparse_table.hpp"
#include "action/range_gcd.hpp"

signed main() {
    int n; input >> n;
    lib::valarray<lib::i32> a(n); input >> a;

    lib::disjoint_sparse_table<lib::actions::range_gcd<lib::i32>> data(a);

    lib::maximum<lib::i32> ans = 0;
    REP(i, n) {
        ans <<= (data(0, i).fold() + data(i + 1, n).fold()).val();
    }

    print(ans);
}
