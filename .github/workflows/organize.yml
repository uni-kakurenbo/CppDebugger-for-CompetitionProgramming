name: organization
run-name: ${{ github.workflow }} (${{ github.ref_name }})

on:
    workflow_call:
    workflow_dispatch:

jobs:
    gen-include:
        runs-on: ${{ vars.RUNNER_IMAGE }}

        steps:
            - name: Git checkout
              uses: actions/checkout@v4
              with:
                  fetch-depth: 0

            - name: Set up Python
              uses: actions/setup-python@v5
              with:
                  python-version: 3.12.0

            - name: Generate headers
              run: |
                  set -eu
                  python3 ./generate-headers.py

            - name: Push
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              run: |
                  set -eu

                  git remote set-url origin https://${GITHUB_ACTOR}:${GITHUB_TOKEN}@github.com/${GITHUB_REPOSITORY}

                  git config --global user.name "GitHub"
                  git config --global user.email "noreply@github.com"

                  git add .

                  if (git diff --cached --shortstat | grep '[0-9]'); then
                    git commit -m "[auto-verifier] header-generation commit ${GITHUB_SHA}"

                    REPOSITORY_NAME="${{ github.head_ref || github.ref_name }}"

                    git pull --rebase origin "${REPOSITORY_NAME}"
                    git push origin "HEAD:${REPOSITORY_NAME}"
                  else
                    echo "No updated files."
                  fi

    sort-verify:
        runs-on: ${{ vars.RUNNER_IMAGE }}

        steps:
            - name: Git checkout
              uses: actions/checkout@v4
              with:
                  fetch-depth: 0

            - name: Sort verification files
              run: ./.github/workflows/internal/group-by.sh

            - name: Push
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              run: |
                  set -eu

                  git remote set-url origin https://${GITHUB_ACTOR}:${GITHUB_TOKEN}@github.com/${GITHUB_REPOSITORY}

                  git config --global user.name "GitHub"
                  git config --global user.email "noreply@github.com"

                  git add .

                  if (git diff --cached --shortstat | grep '[0-9]'); then
                    git commit -m "[auto-verifier] organization commit ${GITHUB_SHA}"

                    REPOSITORY_NAME="${{ github.head_ref || github.ref_name }}"

                    git pull --rebase origin "${REPOSITORY_NAME}"
                    git push origin "HEAD:${REPOSITORY_NAME}"
                  else
                    echo "No updated files."
                  fi

    gen-expanded:
        runs-on: ${{ vars.RUNNER_IMAGE }}
        needs: gen-include

        steps:
            - name: Git checkout
              uses: actions/checkout@v4
              with:
                  ref: ${{ github.head_ref || github.ref_name }}
                  path: uni
                  fetch-depth: 0

            - name: Clone Expander
              uses: actions/checkout@v4
              with:
                  repository: uni-kakurenbo/command-line-applications-for-atcoder
                  sparse-checkout: ./core/expander.py
                  path: apps

            - name: Set up Python
              uses: actions/setup-python@v5
              with:
                  python-version: "pypy3.10"

            - name: Expand
              env:
                  ROOT: ${{ github.workspace }}
              run: |
                  mkdir -p ./uni/expanded/

                  touch ./uni/expanded/all.hpp
                  touch ./uni/expanded/standard.hpp

                  {
                      ./apps/ccore.sh expand_cpp "${ROOT}" "${ROOT}/uni/template/standard.hpp" "${ROOT}/uni/expanded/standard.hpp" --root "${ROOT}" > .standard.log
                  } &

                  {
                    ./apps/ccore.sh expand_cpp "${ROOT}" "${ROOT}/uni/include/all.hpp" "${ROOT}/uni/expanded/all.hpp" --root "${ROOT}" > .all.log
                  } &

                  echo "::group::standard"
                  cat .standard.log
                  echo "::endgroup::"

                  echo "::group::all"
                  cat .all.log
                  echo "::endgroup::"

                  wait

            - name: Push
              working-directory: uni
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              run: |
                  set -eu

                  git remote set-url origin https://${GITHUB_ACTOR}:${GITHUB_TOKEN}@github.com/${GITHUB_REPOSITORY}

                  git config --global user.name "GitHub"
                  git config --global user.email "noreply@github.com"

                  git add ./expanded/

                  if (git diff --cached --shortstat | grep '[0-9]'); then
                    git commit -m "[auto-verifier] expander commit ${GITHUB_SHA}"

                    REPOSITORY_NAME="${{ github.head_ref || github.ref_name }}"

                    git pull --rebase origin "${REPOSITORY_NAME}"
                    git push origin "HEAD:${REPOSITORY_NAME}"
                  else
                    echo "No updated files."
                  fi
