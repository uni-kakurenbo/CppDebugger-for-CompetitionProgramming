#pragma once

#include "adapter/input.hpp"
#include "adapter/output.hpp"

#include "adapter/set.hpp"
#include "adapter/valarray.hpp"
#include "adapter/vector.hpp"

#include "algebraic/addition.hpp"
#include "algebraic/affine.hpp"
#include "algebraic/assignment.hpp"
#include "algebraic/bitxor.hpp"
#include "algebraic/gcd.hpp"
#include "algebraic/maximum.hpp"
#include "algebraic/minimum.hpp"
#include "algebraic/minmax.hpp"
#include "algebraic/null.hpp"

#include "convolution/sum.hpp"
#include "convolution/gcd.hpp"
#include "convolution/lcm.hpp"

#include "data_structure/adapter/set.hpp"

#include "data_structure/range_action/base.hpp"
#include "data_structure/range_action/flags.hpp"
#include "data_structure/range_action/null.hpp"
#include "data_structure/range_action/range_add.hpp"
#include "data_structure/range_action/range_add_range_max.hpp"
#include "data_structure/range_action/range_add_range_min.hpp"
#include "data_structure/range_action/range_add_range_sum.hpp"
#include "data_structure/range_action/range_affine_range_minmax.hpp"
#include "data_structure/range_action/range_affine_range_sum.hpp"
#include "data_structure/range_action/range_bitxor.hpp"
#include "data_structure/range_action/range_gcd.hpp"
#include "data_structure/range_action/range_max.hpp"
#include "data_structure/range_action/range_min.hpp"
#include "data_structure/range_action/range_set_range_max.hpp"
#include "data_structure/range_action/range_set_range_min.hpp"
#include "data_structure/range_action/range_set_range_sum.hpp"
#include "data_structure/range_action/range_sum.hpp"

#include "data_structure/bit_vector.hpp"
#include "data_structure/disjoint_set_union.hpp"
#include "data_structure/disjoint_sparse_table.hpp"
#include "data_structure/fenwick_tree.hpp"
#include "data_structure/implicit_treap.hpp"
#include "data_structure/kth_element.hpp"
#include "data_structure/lazy_segment_tree.hpp"
#include "data_structure/restorable_stack.hpp"
#include "data_structure/segment_tree.hpp"

#include "debugger/debug.hpp"

#include "geometry/basic.hpp"
#include "geometry/convex_full.hpp"
#include "geometry/point.hpp"

#include "graph/centroid_decomposition.hpp"
#include "graph/centroid_path_decomposition.hpp"
#include "graph/connected_components.hpp"
#include "graph/directed_minimum_spanning_tree.hpp"
#include "graph/from_grid.hpp"
#include "graph/lowest_common_ancestor.hpp"
#include "graph/manhattan_minimum_spanning_tree.hpp"
#include "graph/maximum_bipartite_matching.hpp"
#include "graph/minimum_paph_cover.hpp"
#include "graph/shortest_path.hpp"
#include "graph/spanning_tree.hpp"
#include "graph/topological_sort.hpp"

#include "hash/multiset_hasher.hpp"
#include "hash/sequence_hasher.hpp"
#include "hash/set_hasher.hpp"

#include "iterable/accumulation.hpp"
#include "iterable/adjacent_difference.hpp"
#include "iterable/applied.hpp"
#include "iterable/compression.hpp"
#include "iterable/counter.hpp"
#include "iterable/count_inversion.hpp"
#include "iterable/inverse.hpp"
#include "iterable/longest_common_subsequence.hpp"
#include "iterable/longest_increasing_subsequence.hpp"
#include "iterable/mex.hpp"
#include "iterable/operation.hpp"
#include "iterable/run_length_encoding.hpp"

#include "numeric/arithmetic.hpp"
#include "numeric/bit.hpp"
#include "numeric/boundary_seeker.hpp"
#include "numeric/divisors.hpp"
#include "numeric/divisor_multiple_transform.hpp"
#include "numeric/extremum_seeker.hpp"
#include "numeric/fast_prime.hpp"
#include "numeric/int128.hpp"
#include "numeric/interval_scanner.hpp"
#include "numeric/math.hpp"
#include "numeric/matrix.hpp"
#include "numeric/modint.hpp"
#include "numeric/prime_enumerator.hpp"
#include "numeric/prime_sieve.hpp"
#include "numeric/quotient_enumerator.hpp"
#include "numeric/rational.hpp"

#include "random/generator.hpp"
#include "random/xorshift.hpp"

#include "snippet/aliases.hpp"
#include "snippet/fast_io.hpp"
#include "snippet/iterations.hpp"
#include "snippet/using.hpp"

#include "utility/applier.hpp"
#include "utility/functional.hpp"
#include "utility/hilbert_order.hpp"
#include "utility/restrictor.hpp"

#include "constants.hpp"
#include "geometry.hpp"
#include "graph.hpp"
#include "multi_container.hpp"
#include "string.hpp"
#include "template.hpp"
#include "utilities.hpp"
#include "view.hpp"
